# Dependabot without using the Dependabot Azure DevOps Extension from Tingle Software.
# Instead using the dependabot-azure-devops Docker image from Tingle Software.

# Variables:
# ----------
# PAT = <Personal access token>
# BRANCH = main

# https://{HOSTNAME}/{SYSTEM_TEAMPROJECT}/_git/{BUILD_REPOSITORY_NAME}
# HOSTNAME = my-company.visualstudio.com
# SYSTEM_TEAMPROJECT = MyTeam
# BUILD_REPOSITORY_NAME = My_Repo

trigger:
- main

pool:
  vmImage: ubuntu-latest

schedules:
- cron: "0 6 * * *"
  displayName: Daily Dependabot run
  branches:
    include:
    - main

steps:
- script: |
    git clone https://github.com/dependabot/dependabot-script.git
  displayName: Clone dependabot repo
  
- script: docker pull tingle/dependabot-azure-devops
  displayName: Pull dependabot-azure-devops Docker image

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      #!/bin/bash
      echo "Project: $SYSTEM_TEAMPROJECT"
      echo "Repo: $BUILD_REPOSITORY_NAME"
      
      FILECOUNT="$(find . -maxdepth 1 -name composer.json | wc -l)"
      echo "Found $FILECOUNT dependency file(s)."
      find . -maxdepth 1 -name composer.json | while read path; do
      
      echo "---[ Starting dependabot run: $path ]---"
      echo `docker run --rm -t -e AZURE_HOSTNAME=$HOSTNAME -e AZURE_ACCESS_TOKEN=$PAT -e AZURE_PROJECT=$SYSTEM_TEAMPROJECT -e AZURE_REPOSITORY=$BUILD_REPOSITORY_NAME -e DEPENDABOT_PACKAGE_MANAGER='composer' -e DEPENDABOT_DIRECTORY='/' -e DEPENDABOT_TARGET_BRANCH=$BRANCH tingle/dependabot-azure-devops`
      echo "---[ Finished dependabot run ]---"
      done
    failOnStderr: true
  displayName: "Run dependabot"
